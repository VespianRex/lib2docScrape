============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.3.5, pluggy-1.5.0 -- /home/alex/DEV/lib2docScrape/.venv/bin/python3
cachedir: .pytest_cache
metadata: {'Python': '3.12.3', 'Platform': 'Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.5.0'}, 'Plugins': {'metadata': '3.1.1', 'asyncio': '0.26.0', 'mock': '3.14.0', 'html-reporter': '0.2.9', 'html': '4.1.1', 'cov': '6.1.1', 'anyio': '4.9.0'}, 'PLATFORM': 'linux'}
rootdir: /home/alex/DEV/lib2docScrape
configfile: pytest.ini
plugins: metadata-3.1.1, asyncio-0.26.0, mock-3.14.0, html-reporter-0.2.9, html-4.1.1, cov-6.1.1, anyio-4.9.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collecting ... collected 7 items

tests/url/test_validation.py::test_validate_scheme PASSED                [ 14%]
tests/url/test_validation.py::test_validate_netloc PASSED                [ 28%]
tests/url/test_validation.py::test_validate_port PASSED                  [ 42%]
tests/url/test_validation.py::test_validate_path PASSED                  [ 57%]
tests/url/test_validation.py::test_validate_query PASSED                 [ 71%]
tests/url/test_validation.py::test_validate_security_patterns FAILED     [ 85%]
tests/url/test_validation.py::test_validate_url FAILED                   [100%]

=================================== FAILURES ===================================
_______________________ test_validate_security_patterns ________________________

    def test_validate_security_patterns():
        """Test security pattern validation."""
        # Valid URLs with no security issues
>       assert validate_security_patterns(urlparse('http://example.com/path'))[0]
E       assert False

tests/url/test_validation.py:149: AssertionError
----------------------------- Captured stderr call -----------------------------
DEBUG:src.utils.url.validation:Validating security patterns for parsed: ParseResult(scheme='http', netloc='example.com', path='/path', params='', query='', fragment='')
------------------------------ Captured log call -------------------------------
DEBUG    src.utils.url.validation:validation.py:207 Validating security patterns for parsed: ParseResult(scheme='http', netloc='example.com', path='/path', params='', query='', fragment='')
______________________________ test_validate_url _______________________________

    def test_validate_url():
        """Test full URL validation."""
        # Valid URLs
>       assert validate_url(urlparse('http://example.com'))[0]
E       assert False

tests/url/test_validation.py:188: AssertionError
----------------------------- Captured stderr call -----------------------------
DEBUG:src.utils.url.validation:!!! validate_scheme: Checking scheme 'http' against ALLOWED: {'https', 'http'} and DISALLOWED: {'file', 'vbscript', 'javascript', 'ftp', 'data', 'smb', 'ftps'}
DEBUG:src.utils.url.validation:Scheme 'http' is valid and allowed.
DEBUG:src.utils.url.validation:Validating netloc for parsed: ParseResult(scheme='http', netloc='example.com', path='', params='', query='', fragment='')
DEBUG:src.utils.url.validation:Attempting to parse hostname 'example.com' as IP.
DEBUG:src.utils.url.validation:Hostname 'example.com' is not a valid IP. Validating as domain.
DEBUG:src.utils.url.validation:Checking domain hostname 'example.com' against DISALLOWED: {'metadata.google.internal', 'localhost', '127.0.0.1', '169.254.169.254'}
DEBUG:src.utils.url.validation:Domain validation passed for hostname: example.com.
DEBUG:src.utils.url.validation:Validating security patterns for parsed: ParseResult(scheme='http', netloc='example.com', path='', params='', query='', fragment='')
------------------------------ Captured log call -------------------------------
DEBUG    src.utils.url.validation:validation.py:39 !!! validate_scheme: Checking scheme 'http' against ALLOWED: {'https', 'http'} and DISALLOWED: {'file', 'vbscript', 'javascript', 'ftp', 'data', 'smb', 'ftps'}
DEBUG    src.utils.url.validation:validation.py:46 Scheme 'http' is valid and allowed.
DEBUG    src.utils.url.validation:validation.py:50 Validating netloc for parsed: ParseResult(scheme='http', netloc='example.com', path='', params='', query='', fragment='')
DEBUG    src.utils.url.validation:validation.py:71 Attempting to parse hostname 'example.com' as IP.
DEBUG    src.utils.url.validation:validation.py:103 Hostname 'example.com' is not a valid IP. Validating as domain.
DEBUG    src.utils.url.validation:validation.py:106 Checking domain hostname 'example.com' against DISALLOWED: {'metadata.google.internal', 'localhost', '127.0.0.1', '169.254.169.254'}
DEBUG    src.utils.url.validation:validation.py:163 Domain validation passed for hostname: example.com.
DEBUG    src.utils.url.validation:validation.py:207 Validating security patterns for parsed: ParseResult(scheme='http', netloc='example.com', path='', params='', query='', fragment='')
=========================== short test summary info ============================
FAILED tests/url/test_validation.py::test_validate_security_patterns - assert False
FAILED tests/url/test_validation.py::test_validate_url - assert False
========================= 2 failed, 5 passed in 1.19s ==========================
