{"content": {"suites": {"0": {"status": {"total_pass": 34, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 25, "total_error": 0}, "tests": {"0": {"status": "FAIL", "message": "   AssertionError: assert 'http://example.com' == 'http://example.com/'\n     \n     - http://example.com/\n     ?                   -\n     + http://example.com\n", "test_name": "test_valid_url_initialization[http://example.com-http://example.com/]", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[https://www.example.co.uk/path?a=1-https://www.example.co.uk/path?a=1]", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: URL 'http://EXAMPLE.com:80/./path/../other/' failed validation unexpectedly: Path traversal attempt detected\n   assert False is True\n    +  where False = URLInfo(raw='http://EXAMPLE.com:80/./path/../other/', normalized='http://EXAMPLE.com:80/./path/../other/', status='invalid (Path traversal attempt detected)').is_valid\n", "test_name": "test_valid_url_initialization[http://EXAMPLE.com:80/./path/../other/-http://example.com/other/]", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[https://xn--mnchen-3ya.de/path-https://xn--mnchen-3ya.de/path]", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[https://example.com/path/-https://example.com/path/]", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[https://example.com/path-https://example.com/path]", "rerun": "0"}, "6": {"status": "FAIL", "message": "   AssertionError: assert 'https://exam...\\\\to/resource' == 'https://exam...h/to/resource'\n     \n     - https://example.com/path/to/resource\n     ?                         ^\n     + https://example.com/path\\to/resource\n     ?                         ^\n", "test_name": "test_valid_url_initialization[https://example.com/path\\\\to/resource-https://example.com/path/to/resource]", "rerun": "0"}, "7": {"status": "FAIL", "message": "   AssertionError: URL 'https://example.com/docs/folder/..\\other\\file.html' failed validation unexpectedly: Path traversal attempt detected\n   assert False is True\n    +  where False = URLInfo(raw='https://example.com/docs/folder/..\\other\\file.html', normalized='https://example.com/docs/folder/..\\other\\file.html', status='invalid (Path traversal attempt detected)').is_valid\n", "test_name": "test_valid_url_initialization[https://example.com/docs/folder/..\\\\other\\\\file.html-https://example.com/docs/other/file.html]", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[javascript:alert(1)-Disallowed scheme]", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[file:///path/to/file.txt-Disallowed scheme]", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[ftp://user:pass@example.com-Disallowed scheme]", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://<invalid>.com-Invalid label chars in: <invalid>]", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://example..com-Invalid domain label length or empty label]", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://-example.com-Invalid label chars in: -example]", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://example-.com-Invalid label chars in: example-]", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://example.com:99999-Port out of range]", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://example.com/path%00.txt-Null byte detected in raw URL]", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://example.com/?q=<script>-Invalid chars in query]", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://192.168.1.1-Private IP not allowed: 192.168.1.1]", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://127.0.0.1-Disallowed host: 127.0.0.1]", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://localhost-Disallowed host: localhost]", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://[::1]-Private IP not allowed: ::1]", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://10.0.0.1-Private IP not allowed: 10.0.0.1]", "rerun": "0"}, "23": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://169.254.169.254-Disallowed host: 169.254.169.254]", "rerun": "0"}, "24": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[-URL cannot be None or empty]", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[None-URL cannot be None or empty]", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[https://user:pass@example.com-Auth info not allowed]", "rerun": "0"}, "27": {"status": "FAIL", "message": "   AssertionError: assert 'page2.html' == 'http://examp...cs/page2.html'\n     \n     - http://example.com/docs/page2.html\n     + page2.html\n", "test_name": "test_relative_url_resolution[page2.html-http://example.com/docs/page1.html-http://example.com/docs/page2.html]", "rerun": "0"}, "28": {"status": "FAIL", "message": "   AssertionError: assert '../index.html' == 'http://examp...om/index.html'\n     \n     - http://example.com/index.html\n     + ../index.html\n", "test_name": "test_relative_url_resolution[../index.html-http://example.com/docs/page1.html-http://example.com/index.html]", "rerun": "0"}, "29": {"status": "FAIL", "message": "   AssertionError: assert '/images/logo.png' == 'http://examp...ages/logo.png'\n     \n     - http://example.com/images/logo.png\n     + /images/logo.png\n", "test_name": "test_relative_url_resolution[/images/logo.png-http://example.com/docs/page1.html-http://example.com/images/logo.png]", "rerun": "0"}, "30": {"status": "FAIL", "message": "   AssertionError: assert '//other.com/path' == 'https://other.com/path'\n     \n     - https://other.com/path\n     ? ------\n     + //other.com/path\n", "test_name": "test_relative_url_resolution[//other.com/path-https://example.com/docs/-https://other.com/path]", "rerun": "0"}, "31": {"status": "FAIL", "message": "   AssertionError: assert '?query=new' == 'http://examp...age?query=new'\n     \n     - http://example.com/page?query=new\n     + ?query=new\n", "test_name": "test_relative_url_resolution[?query=new-http://example.com/page?a=1-http://example.com/page?query=new]", "rerun": "0"}, "32": {"status": "FAIL", "message": "   AssertionError: assert '#fragment' == 'http://example.com/page'\n     \n     - http://example.com/page\n     + #fragment\n", "test_name": "test_relative_url_resolution[#fragment-http://example.com/page-http://example.com/page]", "rerun": "0"}, "33": {"status": "FAIL", "message": "   AssertionError: assert 'path/./../sub/./file' == 'http://examp...base/sub/file'\n     \n     - http://example.com/base/sub/file\n     + path/./../sub/./file\n", "test_name": "test_relative_url_resolution[path/./../sub/./file-http://example.com/base/-http://example.com/base/sub/file]", "rerun": "0"}, "34": {"status": "FAIL", "message": "   AssertionError: assert 'path/' == 'http://example.com/path/'\n     \n     - http://example.com/path/\n     + path/\n", "test_name": "test_relative_url_resolution[path/-http://example.com/base-http://example.com/path/]", "rerun": "0"}, "35": {"status": "FAIL", "message": "   AssertionError: assert 'subfolder\\\\file.html' == 'https://exam...der/file.html'\n     \n     - https://example.com/docs/subfolder/file.html\n     + subfolder\\file.html\n", "test_name": "test_relative_url_resolution[subfolder\\\\file.html-https://example.com/docs/-https://example.com/docs/subfolder/file.html]", "rerun": "0"}, "36": {"status": "FAIL", "message": "   AssertionError: assert False is True\n    +  where False = URLInfo(raw='..\\other\\file.html', normalized='https://example.com/docs/folder/..\\other\\file.html', status='invalid (Path traversal attempt detected)').is_valid\n", "test_name": "test_relative_url_resolution[..\\\\other\\\\file.html-https://example.com/docs/folder/-https://example.com/docs/other/file.html]", "rerun": "0"}, "37": {"status": "FAIL", "message": "   AssertionError: assert 'https://www....ction#section' == 'https://www....b=two#section'\n     \n     Skipping 50 identical leading characters in diff, use -v to show\n     - two#section\n     + two#section#section\n", "test_name": "test_url_properties", "rerun": "0"}, "38": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[https://www.example.co.uk/path-www-example-co.uk-example.co.uk]", "rerun": "0"}, "39": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[http://blog.example.com-blog-example-com-example.com]", "rerun": "0"}, "40": {"status": "FAIL", "message": "   AssertionError: assert '' == None\n    +  where '' = URLInfo(raw='https://justadomain.com', normalized='https://justadomain.com', status='valid').subdomain\n", "test_name": "test_tldextract_properties[https://justadomain.com-None-justadomain-com-justadomain.com]", "rerun": "0"}, "41": {"status": "FAIL", "message": "   AssertionError: assert '' == None\n    +  where '' = URLInfo(raw='http://xn--mnchen-3ya.de', normalized='http://xn--mnchen-3ya.de', status='valid').subdomain\n", "test_name": "test_tldextract_properties[http://xn--mnchen-3ya.de-None-xn--mnchen-3ya-de-xn--mnchen-3ya.de]", "rerun": "0"}, "42": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[http://localhost:8080-None-localhost-None-localhost]", "rerun": "0"}, "43": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[http://[::1]-None-::1-None-::1]", "rerun": "0"}, "44": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[http://10.0.0.1-None-10.0.0.1-None-10.0.0.1]", "rerun": "0"}, "45": {"status": "PASS", "message": "", "test_name": "test_tldextract_fallback", "rerun": "0"}, "46": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='https://example.com/path', normalized='https://example.com/path', status='valid').url_type\n", "test_name": "test_url_type_determination[https://example.com/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "47": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='/relative/path', normalized='/relative/path', status='valid').url_type\n", "test_name": "test_url_type_determination[/relative/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "48": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='https://www.example.com/path', normalized='https://www.example.com/path', status='valid').url_type\n", "test_name": "test_url_type_determination[https://www.example.com/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "49": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[http://example.com/path-https://example.com/base-URLType.EXTERNAL]", "rerun": "0"}, "50": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[https://other.com/path-https://example.com/base-URLType.EXTERNAL]", "rerun": "0"}, "51": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='page.html', normalized='page.html', status='valid').url_type\n", "test_name": "test_url_type_determination[page.html-https://example.com/base/-URLType.INTERNAL]", "rerun": "0"}, "52": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='https://example.com:443/path', normalized='https://example.com:443/path', status='valid').url_type\n", "test_name": "test_url_type_determination[https://example.com:443/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "53": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='https://example.com:8443/path', normalized='https://example.com:8443/path', status='valid').url_type\n", "test_name": "test_url_type_determination[https://example.com:8443/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "54": {"status": "FAIL", "message": "   AssertionError: assert URLInfo(raw='http://example.com/path/', normalized='http://example.com/path/', status='valid') == URLInfo(raw='http://EXAMPLE.com:80/path/', normalized='http://EXAMPLE.com:80/path/', status='valid')\n", "test_name": "test_url_equality_and_hash", "rerun": "0"}, "55": {"status": "PASS", "message": "", "test_name": "test_immutability", "rerun": "0"}, "56": {"status": "FAIL", "message": "   AssertionError: assert 'https://exam...h?a=1#section' == 'https://example.com/path?a=1'\n     \n     - https://example.com/path?a=1\n     + https://example.com/path?a=1#section\n     ?                             ++++++++\n", "test_name": "test_fragment_removal", "rerun": "0"}, "57": {"status": "PASS", "message": "", "test_name": "test_long_url_edge_case", "rerun": "0"}, "58": {"status": "PASS", "message": "", "test_name": "test_url_info_performance", "rerun": "0"}}, "suite_name": "tests/url/test_info.py"}, "1": {"suite_name": "tests/url/test_types.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_url_type_enum", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}}}, "date": "May 05, 2025", "start_time": 1746447811.2556043, "total_suite": 2, "status": "FAIL", "status_list": {"pass": "35", "fail": "25", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "60"}