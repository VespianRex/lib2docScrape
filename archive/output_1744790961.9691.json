{"content": {"suites": {"0": {"status": {"total_pass": 6, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawler_backend_lifecycle", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawler_backend_error_handling", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_backend_selector_registration", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_backend_selector_selection", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_backend_selector_advanced_selection", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_mock_crawler_backend_edge_cases", "rerun": "0"}}, "suite_name": "tests/test_base.py"}, "1": {"suite_name": "tests/test_content_processor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_extract_text_basic", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_process_basic", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_format_as_markdown", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_extract_text_with_nested_content", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_extract_text_with_special_characters", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_extract_text_with_complex_content", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_extract_text_with_mixed_content_types", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_extract_text_with_scripts", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_script_tags_non_json_ld", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_script_tags_with_invalid_json", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_script_tags_with_different_types", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_scripts_with_data_attributes", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_extract_code_blocks[javascript-console.log(\"Hello, World!\");-```javascript\\nconsole.log(\"Hello, World!\");\\n```]", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_extract_code_blocks[python-print(\"Hello, World!\")-```python\\nprint(\"Hello, World!\")\\n```]", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_extract_code_blocks[ruby-puts \"Hello, Ruby!\"-```ruby\\nputs \"Hello, Ruby!\"\\n```]", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_extract_code_blocks[None-Inline code-`Inline code`]", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_extract_code_blocks_with_attributes", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_extract_code_blocks_with_nested_content", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_code_blocks_with_disallowed_languages", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_extract_content_structure", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_extract_headings_hierarchy", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_extract_metadata", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_extract_metadata_with_complex_metadata", "rerun": "0"}, "23": {"status": "PASS", "message": "", "test_name": "test_extract_metadata_with_duplicates", "rerun": "0"}, "24": {"status": "PASS", "message": "", "test_name": "test_extract_metadata_with_invalid_html", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_extract_metadata_with_missing_values", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_extract_metadata_with_schema_org_json_ld", "rerun": "0"}, "27": {"status": "PASS", "message": "", "test_name": "test_extract_metadata_with_all_types", "rerun": "0"}, "28": {"status": "PASS", "message": "", "test_name": "test_collect_assets", "rerun": "0"}, "29": {"status": "PASS", "message": "", "test_name": "test_images_with_data_urls", "rerun": "0"}, "30": {"status": "PASS", "message": "", "test_name": "test_extract_assets_with_invalid_urls", "rerun": "0"}, "31": {"status": "PASS", "message": "", "test_name": "test_extract_links_with_invalid_urls", "rerun": "0"}, "32": {"status": "PASS", "message": "", "test_name": "test_extract_links_with_relative_paths", "rerun": "0"}, "33": {"status": "PASS", "message": "", "test_name": "test_links_with_query_parameters", "rerun": "0"}, "34": {"status": "PASS", "message": "", "test_name": "test_links_with_anchors", "rerun": "0"}, "35": {"status": "PASS", "message": "", "test_name": "test_anchor_tags_without_href", "rerun": "0"}, "36": {"status": "PASS", "message": "", "test_name": "test_links_with_various_protocols", "rerun": "0"}, "37": {"status": "PASS", "message": "", "test_name": "test_multiple_links_in_paragraph", "rerun": "0"}, "38": {"status": "PASS", "message": "", "test_name": "test_links_with_no_text", "rerun": "0"}}, "status": {"total_pass": 39, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "tests/test_content_processor_advanced.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_url_processor_port_handling", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "3": {"suite_name": "tests/test_content_processor_edge.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_empty_content", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_malformed_html", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_special_characters", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_large_content", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_nested_structures", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_javascript_handling", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_style_handling", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_iframe_handling", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_form_handling", "rerun": "0"}}, "status": {"total_pass": 9, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "4": {"suite_name": "tests/test_crawl4ai.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawl_basic", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawl_with_rate_limit", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_validate_content", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_process_content", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_backend_selection", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_metrics", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_error_handling", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_concurrent_requests", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_cleanup", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_crawl4ai_config_validation", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_ssl_context_configuration", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_custom_headers_handling", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_domain_filtering", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_url_queue_management", "rerun": "0"}}, "status": {"total_pass": 14, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "5": {"suite_name": "tests/test_crawl4ai_extended.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawl_with_urlinfo", "rerun": "0"}, "1": {"status": "SKIP", "message": "('/home/alex/DEV/lib2docScrape/tests/test_crawl4ai_extended.py', 140, 'Skipped: Link following is handled by the main Crawler, not the backend directly.')\n", "test_name": "test_crawl_depth_first", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_rate_limiting_application", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_concurrent_request_limit", "rerun": "0"}, "4": {"status": "FAIL", "message": "       AssertionError: assert 'https://example.com/' == 'https://example.com'\n         \n         - https://example.com\n         + https://example.com/\n         ?                    +\n", "test_name": "test_url_normalization", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_error_propagation", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_retry_behavior", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_metrics_accuracy", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_resource_cleanup", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_url_info_initialization[https://docs.python.org/3/-expected0]", "rerun": "0"}, "10": {"status": "FAIL", "message": "   AssertionError: assert 'https://docs.python.org/' == 'https://docs.python.org'\n     \n     - https://docs.python.org\n     + https://docs.python.org/\n     ?                        +\n", "test_name": "test_url_info_initialization[https://docs.python.org-expected1]", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_url_info_initialization[invalid-url-expected2]", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_url_info_hashable", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_url_info_immutable", "rerun": "0"}}, "status": {"total_pass": 11, "total_skip": 1, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "6": {"suite_name": "tests/test_crawler.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawler_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_url_filtering", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_single_url_processing", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_depth_limited_crawling", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_concurrent_processing", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_rate_limiting", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_error_handling", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_cleanup", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_max_pages_limit", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_statistics_tracking", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_project_type_enum", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_project_identity", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_project_identifier", "rerun": "0"}, "14": {"status": "SKIP", "message": "('/home/alex/DEV/lib2docScrape/tests/test_crawler.py', 470, 'Skipped: DuckDuckGo search not available')\n", "test_name": "test_duckduckgo_search", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_url_discovery", "rerun": "0"}}, "status": {"total_pass": 15, "total_skip": 1, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "7": {"suite_name": "tests/test_crawler_advanced.py", "tests": {"0": {"status": "FAIL", "message": "   AssertionError: assert 'http://example.com/' == 'http://example.com'\n     \n     - http://example.com\n     + http://example.com/\n     ?                   +\n", "test_name": "test_crawler_basic_crawl", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawler_failed_crawl", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_crawler_retry_mechanism", "rerun": "0"}, "3": {"status": "SKIP", "message": "('/home/alex/DEV/lib2docScrape/tests/test_crawler_advanced.py', 160, 'Skipped: Rate limiter timing is difficult to test reliably with mocks')\n", "test_name": "test_crawler_rate_limiting", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_crawler_content_processing", "rerun": "0"}, "5": {"status": "FAIL", "message": "   KeyError: 'http://example.com'\n", "test_name": "test_crawler_quality_checking", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_crawler_resource_cleanup", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_crawler_concurrent_requests", "rerun": "0"}, "8": {"status": "FAIL", "message": "           AssertionError: URL mismatch for http://EXAMPLE.com. Expected: http://example.com, Got: http://example.com/\n           assert 'http://example.com/' == 'http://example.com'\n             \n             - http://example.com\n             + http://example.com/\n             ?                   +\n", "test_name": "test_crawler_url_normalization", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_crawler_error_handling[error0-Network error]", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_crawler_error_handling[error1-Invalid response]", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_crawler_error_handling[error2-Timeout]", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_crawler_error_handling[error3-Connection failed]", "rerun": "0"}}, "status": {"total_pass": 9, "total_skip": 1, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}}, "8": {"suite_name": "tests/test_gui.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_home_page", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawl_request", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_connection_manager", "rerun": "0"}}, "status": {"total_pass": 3, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "9": {"suite_name": "tests/test_helpers.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_rate_limiter", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_retry_strategy", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_timer", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_similarity_calculation", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_checksum_generation", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_logging_setup", "rerun": "0"}}, "status": {"total_pass": 6, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "10": {"suite_name": "tests/test_integration.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_full_site_crawl", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_quality_checks", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_document_organization", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_search_functionality", "rerun": "0"}}, "status": {"total_pass": 5, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "11": {"suite_name": "tests/test_integration_advanced.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_full_crawl_pipeline", "rerun": "0"}, "1": {"status": "FAIL", "message": "       AssertionError: assert 'https://example.com' in ['https://example.com/']\n        +  where ['https://example.com/'] = CrawlResult(target=CrawlTarget(url='https://example.com', depth=1, follow_external=False, content_types=['text/html'],...led_urls=['https://example.com/'], errors={'https://example.com/': ConnectionError('Network error')}, crawled_pages={}).failed_urls\n", "test_name": "test_error_handling_integration", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_rate_limiting_integration", "rerun": "0"}, "3": {"status": "FAIL", "message": "       KeyError: 'https://example.com'\n", "test_name": "test_content_processing_integration", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "12": {"suite_name": "tests/test_link_processor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_basic_link_extraction", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_empty_document", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_malformed_links", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_duplicate_links", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_fragment_handling", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_query_params", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_special_characters", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_nested_links", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_invalid_base_url", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_data_urls", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_unicode_urls", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_protocol_relative_urls", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_base_tag_handling", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_malformed_base_tags", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_link_attributes", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_link_schemes", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_url_normalization", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_url_case_sensitivity", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_url_encoding_handling", "rerun": "0"}}, "status": {"total_pass": 19, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "13": {"suite_name": "tests/test_organizer.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_document_organizer_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_document_version_management", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_document_categorization", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_reference_extraction", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_search_functionality", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_collection_management", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_document_similarity", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_version_tracking", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_search_index_generation", "rerun": "0"}}, "status": {"total_pass": 9, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "14": {"suite_name": "tests/test_processor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_content_processor_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_full_content_processing", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_content_size_limits", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_malformed_html_handling", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_special_content_handling", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_content_structure_preservation", "rerun": "0"}}, "status": {"total_pass": 6, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "15": {"suite_name": "tests/test_quality.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_quality_checker_basic", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_quality_checker_content_length", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_quality_checker_headings", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_quality_checker_links", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_quality_checker_code_blocks", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_quality_checker_metadata", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_quality_checker_custom_config", "rerun": "0"}}, "status": {"total_pass": 7, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "16": {"suite_name": "tests/test_url_handling_integration.py", "tests": {"0": {"status": "FAIL", "message": "   AssertionError: assert 'https://example.com/' == 'https://example.com'\n     \n     - https://example.com\n     + https://example.com/\n     ?                    +\n", "test_name": "test_crawler_url_handling", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_url_type_classification", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_url_security_validation", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "17": {"suite_name": "tests/test_url_info_enhanced.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_domain_parsing", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_backward_compatibility", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "18": {"suite_name": "tests/url/test_info.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[http://example.com-http://example.com/]", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[https://www.example.co.uk/path?a=1-https://www.example.co.uk/path?a=1]", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: assert False is True\n    +  where False = URLInfo(raw='http://EXAMPLE.com:80/./path/../other/', normalized='http://EXAMPLE.com:80/./path/../other/', status='invalid (Directory traversal pattern detected in original path)').is_valid\n", "test_name": "test_valid_url_initialization[http://EXAMPLE.com:80/./path/../other/-http://example.com/other/]", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[https://xn--mnchen-3ya.de/path-https://xn--mnchen-3ya.de/path]", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[http://localhost:8080-http://localhost:8080/]", "rerun": "0"}, "5": {"status": "FAIL", "message": "   AssertionError: assert False is True\n    +  where False = URLInfo(raw='http://127.0.0.1/test', normalized='http://127.0.0.1/test', status='invalid (Private/loopback IP: 127.0.0.1)').is_valid\n", "test_name": "test_valid_url_initialization[http://127.0.0.1/test-http://127.0.0.1/test]", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_valid_url_initialization[file:///path/to/file.txt-file:///path/to/file.txt]", "rerun": "0"}, "7": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid scheme' in 'Disallowed scheme: javascript'\n    +  where 'Disallowed scheme: javascript' = URLInfo(raw='javascript:alert(1)', normalized='javascript:alert(1)', status='invalid (Disallowed scheme: javascript)').error_message\n", "test_name": "test_invalid_url_initialization[javascript:alert(1)-Invalid scheme]", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[ftp://user:pass@example.com-Auth info not allowed]", "rerun": "0"}, "9": {"status": "FAIL", "message": "   assert 'Invalid label chars' in \"Invalid IDNA: <invalid>.com (Codepoint U+003C at position 1 of '<invalid>' not allowed)\"\n    +  where \"Invalid IDNA: <invalid>.com (Codepoint U+003C at position 1 of '<invalid>' not allowed)\" = URLInfo(raw='http://<invalid>.com', normalized='http://<invalid>.com', status='invalid (Invalid IDNA: <invalid>.com (Codepoint U+003C at position 1 of '<invalid>' not allowed))').error_message\n", "test_name": "test_invalid_url_initialization[http://<invalid>.com-Invalid label chars]", "rerun": "0"}, "10": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid port' in 'Initialization failed: ValueError: Port out of range 0-65535'\n    +  where 'Initialization failed: ValueError: Port out of range 0-65535' = URLInfo(raw='http://example.com:99999', normalized='http://example.com:99999', status='invalid (Initialization failed: ValueError: Port out of range 0-65535)').error_message\n", "test_name": "test_invalid_url_initialization[http://example.com:99999-Invalid port]", "rerun": "0"}, "11": {"status": "FAIL", "message": "   AssertionError: assert 'Directory traversal attempt' in 'Directory traversal pattern detected in original path'\n    +  where 'Directory traversal pattern detected in original path' = URLInfo(raw='http://example.com/../../etc/passwd', normalized='http://example.com/../../etc/passwd', status='invalid (Directory traversal pattern detected in original path)').error_message\n", "test_name": "test_invalid_url_initialization[http://example.com/../../etc/passwd-Directory traversal attempt]", "rerun": "0"}, "12": {"status": "FAIL", "message": "   AssertionError: assert 'XSS pattern' in 'Invalid chars in decoded query'\n    +  where 'Invalid chars in decoded query' = URLInfo(raw='http://example.com/?q=<script>', normalized='http://example.com/?q=<script>', status='invalid (Invalid chars in decoded query)').error_message\n", "test_name": "test_invalid_url_initialization[http://example.com/?q=<script>-XSS pattern]", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://192.168.1.1-Private/loopback IP]", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[-URL cannot be None or empty]", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[None-URL cannot be None or empty]", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_invalid_url_initialization[http://example.com/path%00.txt-Null byte in path]", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_relative_url_resolution[page2.html-http://example.com/docs/page1.html-http://example.com/docs/page2.html]", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_relative_url_resolution[../index.html-http://example.com/docs/page1.html-http://example.com/index.html]", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_relative_url_resolution[/images/logo.png-http://example.com/docs/page1.html-http://example.com/images/logo.png]", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_relative_url_resolution[//other.com/path-https://example.com/docs/-https://other.com/path]", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_relative_url_resolution[?query=new-http://example.com/page?a=1-http://example.com/page?query=new]", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_relative_url_resolution[#fragment-http://example.com/page-http://example.com/page]", "rerun": "0"}, "23": {"status": "FAIL", "message": "   AssertionError: assert False is True\n    +  where False = URLInfo(raw='https://user:pass@www.example.co.uk:8443/path/to/page?a=1&b=two#section', normalized='https://user:pass@www.example.co.uk:8443/path/to/page?a=1&b=two#section', status='invalid (Auth info not allowed)').is_valid\n", "test_name": "test_url_properties", "rerun": "0"}, "24": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[https://www.example.co.uk/path-www-example-co.uk-example.co.uk]", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[http://blog.example.com-blog-example-com-example.com]", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[https://justadomain.com--justadomain-com-justadomain.com]", "rerun": "0"}, "27": {"status": "PASS", "message": "", "test_name": "test_tldextract_properties[http://xn--mnchen-3ya.de--xn--mnchen-3ya-de-xn--mnchen-3ya.de]", "rerun": "0"}, "28": {"status": "FAIL", "message": "   AssertionError: assert '' == 'localhost'\n     \n     - localhost\n", "test_name": "test_tldextract_properties[http://localhost:8080--localhost--localhost]", "rerun": "0"}, "29": {"status": "FAIL", "message": "   AssertionError: assert False is True\n    +  where False = URLInfo(raw='http://127.0.0.1', normalized='http://127.0.0.1', status='invalid (Private/loopback IP: 127.0.0.1)').is_valid\n", "test_name": "test_tldextract_properties[http://127.0.0.1--127.0.0.1--127.0.0.1]", "rerun": "0"}, "30": {"status": "PASS", "message": "", "test_name": "test_tldextract_fallback", "rerun": "0"}, "31": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[https://example.com/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "32": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[/relative/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "33": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='https://www.example.com/path', normalized='https://www.example.com/path', status='valid').url_type\n", "test_name": "test_url_type_determination[https://www.example.com/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "34": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[http://example.com/path-https://example.com/base-URLType.EXTERNAL]", "rerun": "0"}, "35": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[https://other.com/path-https://example.com/base-URLType.EXTERNAL]", "rerun": "0"}, "36": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[page.html-https://example.com/base/-URLType.INTERNAL]", "rerun": "0"}, "37": {"status": "PASS", "message": "", "test_name": "test_url_type_determination[https://example.com:443/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "38": {"status": "FAIL", "message": "   AssertionError: assert <URLType.EXTERNAL: 2> == <URLType.INTERNAL: 1>\n    +  where <URLType.EXTERNAL: 2> = URLInfo(raw='https://example.com:8443/path', normalized='https://example.com:8443/path', status='valid').url_type\n", "test_name": "test_url_type_determination[https://example.com:8443/path-https://example.com/base-URLType.INTERNAL]", "rerun": "0"}, "39": {"status": "FAIL", "message": "   AssertionError: assert URLInfo(raw='javascript:void(0)', normalized='javascript:void(0)', status='invalid (Disallowed scheme: javascript)') == URLInfo(raw='javascript:void(0)', normalized='javascript:void(0)', status='invalid (Disallowed scheme: javascript)')\n", "test_name": "test_url_equality_and_hash", "rerun": "0"}, "40": {"status": "PASS", "message": "", "test_name": "test_immutability", "rerun": "0"}, "41": {"status": "PASS", "message": "", "test_name": "test_fragment_removal", "rerun": "0"}, "42": {"status": "PASS", "message": "", "test_name": "test_long_url_edge_case", "rerun": "0"}, "43": {"status": "PASS", "message": "", "test_name": "test_url_info_performance", "rerun": "0"}}, "status": {"total_pass": 31, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 13, "total_error": 0}}, "19": {"suite_name": "tests/url/test_normalization.py", "tests": {"0": {"status": "FAIL", "message": "   Failed: DID NOT RAISE <class 'ValueError'>\n", "test_name": "test_normalize_hostname", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_is_default_port", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: assert '' == '/'\n     \n     - /\n", "test_name": "test_normalize_path", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_normalize_url", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "20": {"suite_name": "tests/url/test_security.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_security_config_constants", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_security_regex_patterns", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "21": {"suite_name": "tests/url/test_types.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_url_type_enum", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "22": {"suite_name": "tests/url/test_validation.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_validate_scheme", "rerun": "0"}, "1": {"status": "FAIL", "message": "   AssertionError: assert 'Missing host' in 'Missing netloc'\n", "test_name": "test_validate_netloc", "rerun": "0"}, "2": {"status": "FAIL", "message": "       ValueError: Got unexpected field names: ['port']\n", "test_name": "test_validate_port", "rerun": "0"}, "3": {"status": "FAIL", "message": "   assert not True\n", "test_name": "test_validate_path", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_validate_query", "rerun": "0"}, "5": {"status": "FAIL", "message": "   AssertionError: assert 'JavaScript scheme' in 'XSS pattern'\n", "test_name": "test_validate_security_patterns", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_validate_url", "rerun": "0"}}, "status": {"total_pass": 3, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 4, "total_error": 0}}}}, "date": "April 16, 2025", "start_time": 1744790041.2128477, "total_suite": 23, "status": "FAIL", "status_list": {"pass": "204", "fail": "27", "skip": "3", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "234"}