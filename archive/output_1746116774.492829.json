{"content": {"suites": {"0": {"status": {"total_pass": 12, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 7, "total_error": 0}, "tests": {"0": {"status": "FAIL", "message": "   AssertionError: Failed check: Path traversal up one level (https://example.com/../secret)\n   assert True == False\n    +  where True = URLInfo(raw='https://example.com/../secret', normalized='https://example.com/secret', status='valid').is_valid\n", "test_name": "test_various_security_risks[https://example.com/../secret-False-Path traversal up one level]", "rerun": "0"}, "1": {"status": "FAIL", "message": "   AssertionError: Failed check: Path traversal up multiple levels (https://example.com/docs/../../etc/passwd)\n   assert True == False\n    +  where True = URLInfo(raw='https://example.com/docs/../../etc/passwd', normalized='https://example.com/etc/passwd', status='valid').is_valid\n", "test_name": "test_various_security_risks[https://example.com/docs/../../etc/passwd-False-Path traversal up multiple levels]", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: Failed check: URL encoded path traversal (https://example.com/%2e%2e/secret)\n   assert True == False\n    +  where True = URLInfo(raw='https://example.com/%2e%2e/secret', normalized='https://example.com/secret', status='valid').is_valid\n", "test_name": "test_various_security_risks[https://example.com/%2e%2e/secret-False-URL encoded path traversal]", "rerun": "0"}, "3": {"status": "FAIL", "message": "   AssertionError: Failed check: Mixed encoding path traversal (https://example.com/..%2fsecret)\n   assert True == False\n    +  where True = URLInfo(raw='https://example.com/..%2fsecret', normalized='https://example.com/secret', status='valid').is_valid\n", "test_name": "test_various_security_risks[https://example.com/..%2fsecret-False-Mixed encoding path traversal]", "rerun": "0"}, "4": {"status": "FAIL", "message": "   AssertionError: Failed check: Backslash path traversal (https://example.com/..\\secret)\n   assert True == False\n    +  where True = URLInfo(raw='https://example.com/..\\secret', normalized='https://example.com/secret', status='valid').is_valid\n", "test_name": "test_various_security_risks[https://example.com/..\\\\secret-False-Backslash path traversal]", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[ftp://example.com/resource-False-Disallowed scheme: FTP]", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[smb://example.com/share-False-Disallowed scheme: SMB]", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[file:///etc/passwd-False-Disallowed scheme: local file access]", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[javascript:void(0)-False-Javascript URI scheme]", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[vbscript:msgbox('XSS')-False-VBScript URI scheme]", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[http://localhost/admin-False-SSRF attempt to localhost]", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[http://127.0.0.1/secrets-False-SSRF attempt to loopback IP]", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[http://169.254.169.254/latest/meta-data/-False-SSRF attempt to AWS metadata service]", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[http://metadata.google.internal/computeMetadata/v1/-False-SSRF attempt to GCP metadata service]", "rerun": "0"}, "14": {"status": "FAIL", "message": "   AssertionError: Failed check: Cyrillic '\u0435' instead of Latin 'e' - Detected as homograph attack (http://\u0435xample.com)\n   assert True == False\n    +  where True = URLInfo(raw='http://\u0435xample.com', normalized='http://xn--xample-2of.com/', status='valid').is_valid\n", "test_name": "test_various_security_risks[http://\\u0435xample.com-False-Cyrillic '\\u0435' instead of Latin 'e' - Detected as homograph attack]", "rerun": "0"}, "15": {"status": "FAIL", "message": "   AssertionError: Failed check: URL with username/password attempting to mask domain (https://google.com@evil.com/)\n   assert True == False\n    +  where True = URLInfo(raw='https://google.com@evil.com/', normalized='https://evil.com/', status='valid').is_valid\n", "test_name": "test_various_security_risks[https://google.com@evil.com/-False-URL with username/password attempting to mask domain]", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[https://example.com/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-False-Excessively long URL path]", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[https://example.com/page\\nnewline-False-Newline character in URL]", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_various_security_risks[https://example.com/page\\t tab-False-Tab character in URL]", "rerun": "0"}}, "suite_name": "tests/test_url_security_extra.py"}}}, "date": "May 01, 2025", "start_time": 1746116675.5043473, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "12", "fail": "7", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "19"}