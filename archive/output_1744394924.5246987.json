{"content": {"suites": {"0": {"status": {"total_pass": 11, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 4, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_urlunparse_behavior", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_url_info_creation_basic", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_url_info_path_normalization", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_url_info_scheme_handling", "rerun": "0"}, "4": {"status": "FAIL", "message": "       AssertionError: assert 'https://exam...ery=1&param=2' == 'https://exam...ery=1&param=2'\n         \n         - https://example.com/?query=1&param=2\n         ?                    -\n         + https://example.com?query=1&param=2\n", "test_name": "test_url_info_query_handling", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_url_info_fragment_handling", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_url_info_invalid_urls", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_url_info_immutability", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_url_info_equality", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_url_info_type_safety", "rerun": "0"}, "10": {"status": "FAIL", "message": "       AssertionError: assert 'http://\u00fcnicode.com' == 'http://xn--nicode-2ya.com/'\n         \n         - http://xn--nicode-2ya.com/\n         ?        ^^^^      ----    -\n         + http://\u00fcnicode.com\n         ?        ^\n", "test_name": "test_url_info_edge_cases", "rerun": "0"}, "11": {"status": "FAIL", "message": "       AssertionError: assert True == False\n        +  where True = URLInfo(raw='http://example.com/../../../etc/passwd', norm='http://example.com/etc/passwd', valid=True, err='None').is_valid\n", "test_name": "test_url_info_security", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_url_info_relative_paths", "rerun": "0"}, "13": {"status": "FAIL", "message": "       AssertionError: assert 'http://examp...param2=value2' == 'http://examp...param2=value2'\n         \n         - http://example.com/?param1=value1&param2=value2\n         ?                   -\n         + http://example.com?param1=value1&param2=value2\n", "test_name": "test_url_info_query_parameters", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_url_info_performance", "rerun": "0"}}, "suite_name": "tests/test_url_handling.py"}, "1": {"suite_name": "tests/test_crawler_advanced.py", "tests": {"0": {"status": "FAIL", "message": "   AssertionError: assert 'http://example.com/' == 'http://example.com'\n     \n     - http://example.com\n     + http://example.com/\n     ?                   +\n", "test_name": "test_crawler_basic_crawl", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawler_failed_crawl", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_crawler_retry_mechanism", "rerun": "0"}, "3": {"status": "SKIP", "message": "('/home/alex/DEV/lib2docScrape/tests/test_crawler_advanced.py', 157, 'Skipped: Rate limiter timing is difficult to test reliably with mocks')\n", "test_name": "test_crawler_rate_limiting", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_crawler_content_processing", "rerun": "0"}, "5": {"status": "FAIL", "message": "   KeyError: 'http://example.com'\n", "test_name": "test_crawler_quality_checking", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_crawler_resource_cleanup", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_crawler_concurrent_requests", "rerun": "0"}, "8": {"status": "FAIL", "message": "           AssertionError: URL mismatch for http://EXAMPLE.com. Expected: http://example.com, Got: http://example.com/\n           assert 'http://example.com/' == 'http://example.com'\n             \n             - http://example.com\n             + http://example.com/\n             ?                   +\n", "test_name": "test_crawler_url_normalization", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_crawler_error_handling", "rerun": "0"}}, "status": {"total_pass": 6, "total_skip": 1, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}}, "2": {"suite_name": "tests/test_integration.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_full_site_crawl", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_quality_checks", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_document_organization", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_search_functionality", "rerun": "0"}}, "status": {"total_pass": 5, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "3": {"suite_name": "tests/test_integration_advanced.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_full_crawl_pipeline", "rerun": "0"}, "1": {"status": "FAIL", "message": "       AssertionError: assert 'https://example.com' in ['https://example.com/']\n        +  where ['https://example.com/'] = CrawlResult(target=CrawlTarget(url='https://example.com', depth=1, follow_external=False, content_types=['text/html'],...led_urls=['https://example.com/'], errors={'https://example.com/': ConnectionError('Network error')}, crawled_pages={}).failed_urls\n", "test_name": "test_error_handling_integration", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_rate_limiting_integration", "rerun": "0"}, "3": {"status": "FAIL", "message": "       KeyError: 'https://example.com'\n", "test_name": "test_content_processing_integration", "rerun": "0"}}, "status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "4": {"suite_name": "tests/test_processor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_content_processor_initialization", "rerun": "0"}, "1": {"status": "FAIL", "message": "   AssertionError: assert 'Mock Title' == 'Sample Document'\n     \n     - Sample Document\n     + Mock Title\n", "test_name": "test_full_content_processing", "rerun": "0"}, "2": {"status": "FAIL", "message": "           AttributeError: Mock object has no attribute 'config'\n", "test_name": "test_content_size_limits", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_malformed_html_handling", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_special_content_handling", "rerun": "0"}, "5": {"status": "FAIL", "message": "   assert 0 == 2\n    +  where 0 = len([])\n", "test_name": "test_content_structure_preservation", "rerun": "0"}}, "status": {"total_pass": 3, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}}, "5": {"suite_name": "tests/test_quality.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_quality_checker_basic", "rerun": "0"}, "1": {"status": "FAIL", "message": "   assert not True\n    +  where True = any(<generator object test_quality_checker_content_length.<locals>.<genexpr> at 0x7f0d18d21a40>)\n", "test_name": "test_quality_checker_content_length", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_quality_checker_headings", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_quality_checker_links", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_quality_checker_code_blocks", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_quality_checker_metadata", "rerun": "0"}, "6": {"status": "FAIL", "message": "   AssertionError: assert 1 == 0\n    +  where 1 = len([QualityIssue(type=<IssueType.CONTENT_LENGTH: 'content_length'>, level=<IssueLevel.ERROR: 'error'>, message='Content length (0) is below minimum (50)', location=None, details={})])\n", "test_name": "test_quality_checker_custom_config", "rerun": "0"}}, "status": {"total_pass": 5, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}}}, "date": "April 11, 2025", "start_time": 1744394804.054682, "total_suite": 6, "status": "FAIL", "status_list": {"pass": "32", "fail": "14", "skip": "1", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "47"}