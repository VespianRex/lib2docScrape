{"content": {"suites": {"0": {"status": {"total_pass": 8, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawler_backend_lifecycle", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawler_backend_error_handling", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_backend_selector_registration", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_backend_selector_selection", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_url_normalization", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_processed_content_validation", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_concurrent_backend_operations", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_backend_metrics_update", "rerun": "0"}, "8": {"status": "FAIL", "message": "   Failed: DID NOT RAISE <class 'ValueError'>\n", "test_name": "test_backend_selector_error_handling", "rerun": "0"}}, "suite_name": "tests/test_base.py"}, "1": {"suite_name": "tests/test_crawler.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawler_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_url_filtering", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_single_url_processing", "rerun": "0"}, "3": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_depth_limited_crawling", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_concurrent_processing", "rerun": "0"}, "5": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_rate_limiting", "rerun": "0"}, "6": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_error_handling", "rerun": "0"}, "7": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "8": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_cleanup", "rerun": "0"}, "9": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_max_pages_limit", "rerun": "0"}, "10": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_statistics_tracking", "rerun": "0"}}, "status": {"total_pass": 4, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 7, "total_error": 0}}, "2": {"suite_name": "tests/test_integration.py", "tests": {"0": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_full_site_crawl", "rerun": "0"}, "1": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "2": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_quality_checks", "rerun": "0"}, "3": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_document_organization", "rerun": "0"}, "4": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_search_functionality", "rerun": "0"}, "5": {"status": "FAIL", "message": "       pydantic_core._pydantic_core.ValidationError: 1 validation error for CrawlResult\n       issues.0\n         Input should be a valid dictionary or instance of QualityIssue [type=model_type, input_value=\"'DocumentationCrawler' o...rocess_discovered_urls'\", input_type=str]\n           For further information visit https://errors.pydantic.dev/2.10/v/model_type\n", "test_name": "test_error_handling_and_recovery", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 6, "total_error": 0}}, "3": {"suite_name": "tests/test_organizer.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_document_organizer_initialization", "rerun": "0"}, "1": {"status": "FAIL", "message": "   AssertionError: assert 1 == 2\n    +  where 1 = len([DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 19, 36, 6, 925666), hash='74b5729066ae41b81a439ef80e0be0491f146888a48145bb51466266392573df', changes={'text': 'Version 1'})])\n    +    where [DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 19, 36, 6, 925666), hash='74b5729066ae41b81a439ef80e0be0491f146888a48145bb51466266392573df', changes={'text': 'Version 1'})] = DocumentMetadata(title='Test Document', url='https://example.com/doc', category='reference', tags=['document', 'versio...573df', changes={'text': 'Version 1'})], references={'internal': [], 'external': []}, index_terms=['document', 'test']).versions\n", "test_name": "test_document_version_management", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: assert 'example' == 'uncategorized'\n     \n     - uncategorized\n     + example\n", "test_name": "test_document_categorization", "rerun": "0"}, "3": {"status": "FAIL", "message": "   AssertionError: assert 'code' in {'external': ['https://external.com'], 'internal': ['https://example.com/internal']}\n", "test_name": "test_reference_extraction", "rerun": "0"}, "4": {"status": "FAIL", "message": "   assert 0 > 0\n    +  where 0 = len([])\n", "test_name": "test_search_functionality", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_collection_management", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_document_similarity", "rerun": "0"}, "7": {"status": "FAIL", "message": "   AssertionError: assert 'v1' > 'v1'\n    +  where 'v1' = DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 19, 36, 6, 945783), hash='edf19e778d8530afa13304602c048c6f9af71b5ae7bade4d54de78c21ce45635', changes={'text': 'Initial version'}).version_id\n    +  and   'v1' = DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 19, 36, 6, 945783), hash='edf19e778d8530afa13304602c048c6f9af71b5ae7bade4d54de78c21ce45635', changes={'text': 'Initial version'}).version_id\n", "test_name": "test_version_tracking", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_search_index_generation", "rerun": "0"}}, "status": {"total_pass": 4, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 5, "total_error": 0}}, "4": {"suite_name": "tests/test_processor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_content_processor_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_processing_rule_validation", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_clean_text_processing", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_code_language_detection", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_code_block_processing", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_link_processing", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_metadata_extraction", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_asset_collection", "rerun": "0"}, "8": {"status": "FAIL", "message": "   AssertionError: assert 0 > 0\n    +  where 0 = len([])\n    +    where [] = <built-in method get of dict object at 0x1133ac840>('images', [])\n    +      where <built-in method get of dict object at 0x1133ac840> = {}.get\n    +        where {} = ProcessedContent(url='https://example.com/test', title='Sample Document', content={'text': '\\n\\n\\nSample Document\\n\\n\\...'}], 'links': [{'url': 'https://example.com', 'text': 'link', 'type': 'internal'}]}, metadata={}, assets={}, errors=[]).assets\n", "test_name": "test_full_content_processing", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_content_size_limits", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_malformed_html_handling", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_special_content_handling", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_content_structure_preservation", "rerun": "0"}}, "status": {"total_pass": 12, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "5": {"suite_name": "tests/test_quality.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_quality_checker_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_content_length_check", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_heading_structure_check", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_link_validation", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_metadata_check", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_code_block_validation", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_quality_metrics_calculation", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_full_quality_check", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_quality_checker_cleanup", "rerun": "0"}}, "status": {"total_pass": 9, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}}}, "date": "November 25, 2024", "start_time": 1732556167.337826, "total_suite": 6, "status": "FAIL", "status_list": {"pass": "37", "fail": "20", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "57"}