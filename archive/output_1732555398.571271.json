{"content": {"suites": {"0": {"status": {"total_pass": 8, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawler_backend_lifecycle", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_crawler_backend_error_handling", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_backend_selector_registration", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_backend_selector_selection", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_url_normalization", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_processed_content_validation", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_concurrent_backend_operations", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_backend_metrics_update", "rerun": "0"}, "8": {"status": "FAIL", "message": "   Failed: DID NOT RAISE <class 'ValueError'>\n", "test_name": "test_backend_selector_error_handling", "rerun": "0"}}, "suite_name": "tests/test_base.py"}, "1": {"suite_name": "tests/test_crawler.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_crawler_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_url_filtering", "rerun": "0"}, "2": {"status": "FAIL", "message": "   assert None is not None\n", "test_name": "test_single_url_processing", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_depth_limited_crawling", "rerun": "0"}, "4": {"status": "FAIL", "message": "   assert False\n    +  where False = all(<generator object test_concurrent_processing.<locals>.<genexpr> at 0x1117b7680>)\n", "test_name": "test_concurrent_processing", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_rate_limiting", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_error_handling", "rerun": "0"}, "7": {"status": "FAIL", "message": "   AssertionError: assert 0 == 1\n    +  where 0 = CrawlStats(start_time=datetime.datetime(2024, 11, 25, 17, 20, 9, 806786), end_time=datetime.datetime(2024, 11, 25, 17,...awls=1, total_time=0.10110807418823242, average_time_per_page=0.10110807418823242, quality_issues=5, bytes_processed=0).successful_crawls\n    +    where CrawlStats(start_time=datetime.datetime(2024, 11, 25, 17, 20, 9, 806786), end_time=datetime.datetime(2024, 11, 25, 17,...awls=1, total_time=0.10110807418823242, average_time_per_page=0.10110807418823242, quality_issues=5, bytes_processed=0) = CrawlResult(target=CrawlTarget(url='https://example.com/doc2', depth=1, follow_external=False, content_types=['text/ht..., average_time_per_page=0.10110807418823242, quality_issues=5, bytes_processed=0), documents=[], issues=[], metrics={}).stats\n", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "8": {"status": "FAIL", "message": "   TypeError: 'function' object is not iterable\n", "test_name": "test_cleanup", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_max_pages_limit", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_statistics_tracking", "rerun": "0"}}, "status": {"total_pass": 7, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 4, "total_error": 0}}, "2": {"suite_name": "tests/test_integration.py", "tests": {"0": {"status": "FAIL", "message": "   AssertionError: assert 0 > 0\n    +  where 0 = CrawlStats(start_time=datetime.datetime(2024, 11, 25, 17, 20, 11, 194155), end_time=datetime.datetime(2024, 11, 25, 17...crawls=1, total_time=3.0022740364074707, average_time_per_page=3.0022740364074707, quality_issues=0, bytes_processed=0).successful_crawls\n    +    where CrawlStats(start_time=datetime.datetime(2024, 11, 25, 17, 20, 11, 194155), end_time=datetime.datetime(2024, 11, 25, 17...crawls=1, total_time=3.0022740364074707, average_time_per_page=3.0022740364074707, quality_issues=0, bytes_processed=0) = CrawlResult(target=CrawlTarget(url='file:///private/var/folders/c6/0glsj2qj54s2pr7y8ncq92l40000gn/T/pytest-of-alex/pyt...7, average_time_per_page=3.0022740364074707, quality_issues=0, bytes_processed=0), documents=[], issues=[], metrics={}).stats\n", "test_name": "test_full_site_crawl", "rerun": "0"}, "1": {"status": "FAIL", "message": "   AssertionError: assert 0 == 1\n    +  where 0 = len([])\n    +    where [] = CrawlResult(target=CrawlTarget(url='file:///private/var/folders/c6/0glsj2qj54s2pr7y8ncq92l40000gn/T/pytest-of-alex/pyt...26, average_time_per_page=3.002652168273926, quality_issues=0, bytes_processed=0), documents=[], issues=[], metrics={}).documents\n", "test_name": "test_content_processing_pipeline", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: assert 0 > 0\n    +  where 0 = len({})\n    +    where {} = CrawlResult(target=CrawlTarget(url='file:///private/var/folders/c6/0glsj2qj54s2pr7y8ncq92l40000gn/T/pytest-of-alex/pyt...65, average_time_per_page=3.001882791519165, quality_issues=0, bytes_processed=0), documents=[], issues=[], metrics={}).metrics\n", "test_name": "test_quality_checks", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_document_organization", "rerun": "0"}, "4": {"status": "FAIL", "message": "   assert 0 > 0\n    +  where 0 = len([])\n", "test_name": "test_search_functionality", "rerun": "0"}, "5": {"status": "FAIL", "message": "   AssertionError: assert 0 > 0\n    +  where 0 = CrawlStats(start_time=datetime.datetime(2024, 11, 25, 17, 20, 26, 248229), end_time=datetime.datetime(2024, 11, 25, 17...crawls=1, total_time=3.0028228759765625, average_time_per_page=3.0028228759765625, quality_issues=0, bytes_processed=0).successful_crawls\n    +    where CrawlStats(start_time=datetime.datetime(2024, 11, 25, 17, 20, 26, 248229), end_time=datetime.datetime(2024, 11, 25, 17...crawls=1, total_time=3.0028228759765625, average_time_per_page=3.0028228759765625, quality_issues=0, bytes_processed=0) = CrawlResult(target=CrawlTarget(url='file:///private/var/folders/c6/0glsj2qj54s2pr7y8ncq92l40000gn/T/pytest-of-alex/pyt...5, average_time_per_page=3.0028228759765625, quality_issues=0, bytes_processed=0), documents=[], issues=[], metrics={}).stats\n", "test_name": "test_error_handling_and_recovery", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 5, "total_error": 0}}, "3": {"suite_name": "tests/test_organizer.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_document_organizer_initialization", "rerun": "0"}, "1": {"status": "FAIL", "message": "   AssertionError: assert 1 == 2\n    +  where 1 = len([DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 17, 20, 29, 258223), hash='74b5729066ae41b81a439ef80e0be0491f146888a48145bb51466266392573df', changes={'content': {'text': 'Version 2'}})])\n    +    where [DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 17, 20, 29, 258223), hash='74b5729066ae41b81a439ef80e0be0491f146888a48145bb51466266392573df', changes={'content': {'text': 'Version 2'}})] = DocumentMetadata(title='Test Document', url='https://example.com/doc', category='reference', tags=[], last_updated=dat...content': {'text': 'Version 2'}})], references={'internal': [], 'external': [], 'code': [], 'api': []}, index_terms=[]).versions\n", "test_name": "test_document_version_management", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_document_categorization", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_reference_extraction", "rerun": "0"}, "4": {"status": "FAIL", "message": "E   IndexError: list index out of range\n", "test_name": "test_search_functionality", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_collection_management", "rerun": "0"}, "6": {"status": "FAIL", "message": "   assert 0 > 0\n    +  where 0 = len([])\n", "test_name": "test_document_similarity", "rerun": "0"}, "7": {"status": "FAIL", "message": "   AssertionError: assert 'v1' > 'v1'\n    +  where 'v1' = DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 17, 20, 29, 274831), hash='edf19e778d8530afa13304602c048c6f9af71b5ae7bade4d54de78c21ce45635', changes={'content': {'text': 'Version 3'}}).version_id\n    +  and   'v1' = DocumentVersion(version_id='v1', timestamp=datetime.datetime(2024, 11, 25, 17, 20, 29, 274831), hash='edf19e778d8530afa13304602c048c6f9af71b5ae7bade4d54de78c21ce45635', changes={'content': {'text': 'Version 3'}}).version_id\n", "test_name": "test_version_tracking", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_search_index_generation", "rerun": "0"}}, "status": {"total_pass": 5, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 4, "total_error": 0}}, "4": {"suite_name": "tests/test_processor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_content_processor_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_processing_rule_validation", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: assert 'Text with  t... and  symbols' == 'Text with tags and symbols'\n     \n     - Text with tags and symbols\n     + Text with  tags  and  symbols\n     ?           +     +   +\n", "test_name": "test_clean_text_processing", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_code_language_detection", "rerun": "0"}, "4": {"status": "FAIL", "message": "   AssertionError: assert 'text' == 'python'\n     \n     - python\n     + text\n", "test_name": "test_code_block_processing", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_link_processing", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_metadata_extraction", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_asset_collection", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_full_content_processing", "rerun": "0"}, "9": {"status": "FAIL", "message": "   AssertionError: assert not {'code_blocks': [], 'headings': [], 'links': [], 'title': 'Untitled Document'}\n    +  where {'code_blocks': [], 'headings': [], 'links': [], 'title': 'Untitled Document'} = ProcessedContent(url='https://example.com', title='Untitled Document', content={'title': 'Untitled Document', 'heading...er_cards': {}, 'structured_data': []}, assets={'images': [], 'stylesheets': [], 'scripts': [], 'media': []}, errors=[]).content\n", "test_name": "test_content_size_limits", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_malformed_html_handling", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_special_content_handling", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_content_structure_preservation", "rerun": "0"}}, "status": {"total_pass": 10, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}}, "5": {"suite_name": "tests/test_quality.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_quality_checker_initialization", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_content_length_check", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_heading_structure_check", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_link_validation", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_metadata_check", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_code_block_validation", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_quality_metrics_calculation", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_full_quality_check", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_quality_checker_cleanup", "rerun": "0"}}, "status": {"total_pass": 9, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}}}, "date": "November 25, 2024", "start_time": 1732555231.464698, "total_suite": 6, "status": "FAIL", "status_list": {"pass": "40", "fail": "17", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "57"}